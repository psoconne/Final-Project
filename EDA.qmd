---
title: "EDA of Diabetes Health Indicators Dataset"
author: "Paige O'Connell"
format: html
editor: visual
---

## Introduction

The data used in these analyses are the results of a yearly survey that collects health-related data on Americans. The majority of the variables in this data set are binary (yes/no). Their are some variables that have more than two levels including GenHlth, Age, Education, and Income. The only variables with a numeric data type are BMI, MentHlth, and PhysHlth.

The purpose of our exploratory data analysis is to ensure that all data types are correct, so any variables that need to be converted to factor data type will be adjusted here. It is also good practice to determine the rate of missing values in an EDA, so if there are any missing values they can be dealt with now instead of causing issues in the modeling phase.

Our response variable will ultimately be Diabetes_binary, which has responses of 0 = no diabetes and 1 = diabetes. The goal of modeling will be to see which of the other variables are good at predicting diabetes.

## Data

> Use a relative path to import the data.

```{r, message = FALSE}
library(tidyverse)
```

```{r}
diabetes_data <- read_csv('diabetes_binary_health_indicators_BRFSS2015.csv')

str(diabetes_data)
```

> Convert all binary/categorical variables to factors with meaningful level names.

```{r}
diabetes_data <- diabetes_data |>
  mutate(
    Diabetes_binary = factor(Diabetes_binary, levels = c(0, 1), labels = c("No_Diabetes", "Diabetes")),
    HighBP = factor(HighBP, levels = c(0, 1), labels = c("No", "Yes")),
    HighChol = factor(HighChol, levels = c(0, 1), labels = c("No", "Yes")),
    CholCheck = factor(CholCheck, levels = c(0, 1), labels = c("No", "Yes")),
    Smoker = factor(Smoker, levels = c(0, 1), labels = c("No", "Yes")),
    Stroke = factor(Stroke, levels = c(0, 1), labels = c("No", "Yes")),
    HeartDiseaseorAttack = factor(HeartDiseaseorAttack, levels = c(0, 1), labels = c("No", "Yes")),
    PhysActivity = factor(PhysActivity, levels = c(0, 1), labels = c("No", "Yes")),
    Fruits = factor(Fruits, levels = c(0, 1), labels = c("No", "Yes")),
    Veggies = factor(Veggies, levels = c(0, 1), labels = c("No", "Yes")),
    HvyAlcoholConsump = factor(HvyAlcoholConsump, levels = c(0, 1), labels = c("No", "Yes")),
    AnyHealthcare = factor(AnyHealthcare, levels = c(0, 1), labels = c("No", "Yes")),
    NoDocbcCost = factor(NoDocbcCost, levels = c(0, 1), labels = c("No", "Yes")),
    GenHlth = factor(GenHlth, levels = 1:5, labels = c("Excellent", "Very_Good", "Good", "Fair", "Poor")),
    DiffWalk = factor(DiffWalk, levels = c(0, 1), labels = c("No", "Yes")),
    Sex = factor(Sex, levels = c(0, 1), labels = c("Female", "Male")),
    Age =factor(Age, levels = 1:13, labels = c("18_24", "25_29", "30_34", "35_39", "40_44", "45_49", 
                                               "50_54", "55_59", "60_64", "65_69", "70_74", "75_79", "80_or_older")),
    Education = factor(Education, levels = 1:6, labels = c("Never_Attended", "Elementary", "Some_High_School", 
                                                           "High_School_Graduate", "Some_College", 
                                                           "College_Graduate")),
    Income = factor(Income, levels = 1:8, labels = c("Less_than_10k", "10k_to_15k", 
                                                     "15k_to_20k", "20k_to_25k", 
                                                     "25k_to_35k", "35k_to_50k", 
                                                     "50k_to_75k", "75k_or_more"))
  )

str(diabetes_data)
```

> Determine Rate of Missing Values Below we find that there are no missing values.

```{r}
sum_na <- function(column){
 sum(is.na(column))
}
na_counts <- diabetes_data |>
 summarize(across(everything(), sum_na))
na_counts
```

## Summarizations

> This section contains meaningful summary statistics and plots about the data (especially as it relates to the response).

> Describe numerical data - Below are summary statistics, such as count, mean, sd, etc., for the three numerical variables in the data set.

```{r}
numeric_data <- diabetes_data |>
  select_if(is.numeric)
psych::describe(numeric_data)
```

> Below are contingency tables for the factor variables with respect to our Diabetes_binary response variable.

```{r}
categorical_data <- diabetes_data |>
  select_if(is.factor) |>
  select(-Diabetes_binary)

for (var in names(categorical_data)) {
  print(var)
  print(table(categorical_data[[var]], diabetes_data$Diabetes_binary))
}
```

```{r}
for (var in names(categorical_data)) {
  p <- ggplot(diabetes_data, aes_string(x = var, fill = "Diabetes_binary")) +
    geom_bar(position = "dodge") +
    labs(title = paste("Bar Plot of", var, "by Diabetes Status"), x = var, y = "Count") +
    theme_minimal()
  print(p)
}
```

> Below are histograms of our numeric data

```{r}
for (var in names(numeric_data)) {
  p <- ggplot(diabetes_data, aes_string(x = var)) + 
    geom_histogram(binwidth = 1, fill = "blue", color = "black", alpha = 0.7) +
    labs(title = paste("Histogram of", var), x = var, y = "Frequency") +
    theme_minimal()
  print(p)
}
```

> Finally, we have a correlation matrix of our numeric data

```{r}
cor(numeric_data)
```
